{"version":3,"sources":["ininFirebase.js","pages/Home/components/result/Input.js","icons/Facebook.svg","icons/Twitter.svg","pages/Home/components/result/Score.js","actions/action.js","icons/GitHub.svg","pages/Home/components/result/index.js","pages/Home/components/test/Header.js","icons/Correct.svg","pages/Home/components/test/Begin/BeginContent.js","pages/Home/components/test/Footer.js","pages/Home/components/test/Begin/BeginTest.js","icons/Wrong.svg","pages/Home/components/test/Formal/FormalContent.js","pages/Home/components/test/Formal/FormalTest.js","pages/Home/components/test/index.js","pages/Home/index.js","reducer/scoreReducer.js","reducer/timeScoreArrayReducer.js","reducer/userAnswerArray.js","store/store.js","index.js"],"names":["config","apiKey","KEY","PUBLIC_FIREBASE_API_KEY","authDomain","PUBLIC_FIREBASE_PROJECT_ID","databaseURL","projectId","storageBucket","messagingSenderId","MESSAGING_SENDER_ID","appId","APP_ID","measurementId","MEASUREMENT_ID","firebase","apps","length","initializeApp","Input","setIsInpitFinished","useState","playerName","setPlayerName","playerOccupation","setOccupation","playerScore","timeScoreArray","playerTime","playerResult","setPlayerResult","finalScore","useSelector","state","score","userAnswereArray","useRef","db","database","useEffect","timeScore","current","Math","floor","playerAnswer","handleChangeOccupation","e","target","value","className","htmlFor","type","name","id","onChange","maxLength","onClick","ref","push","set","Score","setIsFormalFinished","setPlayerTime","dispatch","useDispatch","time","timeFormatConvert","rankStyleObject","rank","rankColor","displayFinalScore","min","sec","style","backgroundColor","FacebookShareButton","resetButtonStyle","url","quote","src","Facebook","alt","TwitterShareButton","Twitter","payload","clearUserAnswereArray","clearScore","Result","isInpitFinished","href","rel","GitHub","Header","answer","userAnswer","calculateScore","Content","data","index","setBeginIndex","setIsBeginFinished","buttonArea","setButtonArea","pictureOverlapping","setPictureOverlapping","firstCorrectStyle","setFirstCorrectStyle","secondCorrectStyle","setSecondCorrectStyle","setUserAnswer","descriptionIcon","setDescriptionIcon","handleClickCompare","event","firstStyle","secondStyle","hidden","zIndex","visibility","visible","beginIndexEvent","pre","icon","Correct","picture","testDescription","beginDescription","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","compareButton","beginFinished","nextButton","Footer","arrayIndex","arrayLength","loadingName","step","loadingWidth","width","Begin","beginIndex","beginDataArrayLength","BeginData","BeginContent","testIndex","setTestIndex","levelIndex","setLevelIndex","setCurrentTime","startTime","isPictureClicked","setIsPictureClicked","descriptionText","setDescriptionText","selectedPitcure","userClick","userAnswerClick","Wrong","Date","getTime","firstPicture","secondPicture","formalIndexEvent","plusLevelIndex","resetTestIndex","formalFinished","FormalTest","currentTime","level","easy","medium","hard","formalDataArrayLength","costTime","FormalContent","Test","isBeginFinished","BeginTest","Home","ReactGA","initialize","TRACKING_ID","pageview","window","location","pathname","isFormalFinished","console","log","height","innerHeight","action","store","createStore","combineReducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bc8fc27.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport KEY from \"./config.json\"\n\nconst config = {\n  apiKey: KEY.PUBLIC_FIREBASE_API_KEY,\n  authDomain: `${KEY.PUBLIC_FIREBASE_PROJECT_ID}.firebaseapp.com`,\n  databaseURL: `https://${KEY.PUBLIC_FIREBASE_PROJECT_ID}-default-rtdb.asia-southeast1.firebasedatabase.app`,\n  projectId: KEY.PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: `${KEY.PUBLIC_FIREBASE_PROJECT_ID}.appspot.com`,\n  messagingSenderId: KEY.MESSAGING_SENDER_ID,\n  appId: KEY.APP_ID,\n  measurementId: KEY.MEASUREMENT_ID\n};\n\nfunction initFirebase() {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(config);\n  }\n}\n\ninitFirebase();\n\nexport { firebase };","import React,{useState,useEffect,useRef} from 'react'\nimport {useSelector} from 'react-redux'\nimport {firebase} from \"../../../../ininFirebase\";\n\nconst Input = ({setIsInpitFinished}) => {\n    const [playerName, setPlayerName] = useState(\"\");\n    const [playerOccupation, setOccupation] = useState(\"\");\n    const [playerResult, setPlayerResult] = useState({playerName:\"\",playerScore:\"\",timeScoreArray:[],playerTime:\"\"})\n    let finalScore = useSelector(state=>state.score);\n    let timeScoreArray = useSelector(state=>state.timeScoreArray);\n    let userAnswereArray = useSelector(state=>state.userAnswereArray);\n    const playerTime = useRef(0);\n\n    const db = firebase.database();\n\n    useEffect(() => {\n        //used on playerResult\n        for(const timeScore of timeScoreArray){\n            playerTime.current += timeScore\n        }\n        playerTime.current = Math.floor(playerTime.current)\n    }, [timeScoreArray]);\n\n    useEffect(() => {\n        //player final result\n        setPlayerResult({\n            playerName:playerName,\n            playerOccupation:playerOccupation,\n            playerAnswer:userAnswereArray,\n            playerScore:finalScore,\n            timeScoreArray:timeScoreArray,\n            playerTime:playerTime.current})\n    }, [playerName,playerOccupation,finalScore])\n\n    const handleChangePlayerName = (e) => {\n        setPlayerName(e.target.value);\n    }\n\n    const handleChangeOccupation = (e) => {\n        setOccupation(e.target.value)\n    }\n\n    const handleClickSubmit = () => {\n        // submit data\n        const playerDataRef = db.ref(\"playerData\");\n        const newPlayerDataRef = playerDataRef.push();\n        newPlayerDataRef.set(playerResult);\n\n        // get data\n        // playerDataRef.on(\"value\",(snapshot)=>{\n        //     snapshot.forEach((childSnapshot)=>{\n        //         let childData = childSnapshot.val();\n        //         console.log(childData);\n        //     });\n        // });\n  \n        setIsInpitFinished(true)\n    }\n\n    return (\n        <div className=\"user-input\">\n            <h3 className=\"title\">Find the <br/>Differences UI</h3>\n            <p className=\"description\">What do you do?</p>\n            <div className=\"occupation-input\">\n                <div className=\"vertical-alignment-box\">\n                    <label htmlFor=\"Designer\"><input className=\"radio-input\" type=\"radio\" name=\"occupation\" id=\"Designer\" value=\"Designer\" onChange={handleChangeOccupation}/><div className=\"radio\"></div>Designer</label>\n                    <label htmlFor=\"Engineer\"><input className=\"radio-input\" type=\"radio\" name=\"occupation\" id=\"Engineer\" value=\"Engineer\" onChange={handleChangeOccupation}/><div className=\"radio\"></div>Engineer</label>\n                    <label htmlFor=\"Else\"><input className=\"radio-input\" type=\"radio\" name=\"occupation\" id=\"Else\" value=\"Else\" onChange={handleChangeOccupation}/><div className=\"radio\"></div>Else</label>\n                </div>\n            </div>\n            <p className=\"description\">Please entry your name</p>\n            <input className=\"name-input\" type=\"text\" maxLength=\"10\" onChange={handleChangePlayerName}/>\n            <button className=\"button\" onClick={handleClickSubmit}>Submit</button>\n        </div>\n    )\n}\n\nexport default Input","export default __webpack_public_path__ + \"static/media/Facebook.da27a2e8.svg\";","export default __webpack_public_path__ + \"static/media/Twitter.2bbc36ba.svg\";","import React,{useState,useEffect} from 'react';\nimport {FacebookShareButton,TwitterShareButton} from 'react-share';\nimport Facebook from '../../../../icons/Facebook.svg';\nimport Twitter from '../../../../icons/Twitter.svg';\nimport {useSelector,useDispatch} from 'react-redux'\nimport {clearTimeScoreArray,clearUserAnswereArray,clearScore} from '../../../../actions/action'\n\nconst Score = ({setIsFormalFinished}) => {\n    const [playerTime, setPlayerTime] = useState(0);\n    const dispatch = useDispatch();\n    let finalScore = useSelector(state=>state.score);\n    let timeScoreArray = useSelector(state=>state.timeScoreArray);\n    useEffect(() => {\n        //Convert time to display\n        let time = 0\n        for(const timeScore of timeScoreArray){\n            time += timeScore\n        }\n        time = Math.floor(time);\n        setPlayerTime(timeFormatConvert(time))\n    }, [timeScoreArray]);\n\n    let rankStyleObject = {rank:\"God\",rankColor:\"#772ce8\"}\n    if(finalScore <= 10000){\n        rankStyleObject = {rank:\"Brozne\",rankColor:\"#CD7F32\"}\n    }else if(finalScore <= 15000){\n        rankStyleObject = {rank:\"Silver\",rankColor:\"#C0C0C0\"}\n    }else if(finalScore <= 20000){\n        rankStyleObject = {rank:\"Gold\",rankColor:\"#FFD700\"}\n    }\n\n    const timeFormatConvert = (time) => {\n        let resultTime = 0\n        let min = 0\n        let sec = 0\n        while(time >= 60){\n            min += 1\n            time -= 60\n        }\n        sec = time\n        if(min < 10){\n            min = `0${min}`\n        }\n        if(sec < 10){\n            sec = `0${sec}`\n        }\n        resultTime = `${min}:${sec}`\n        return resultTime\n    }\n\n    const handleClickPlayAgain = () => {\n        setIsFormalFinished(false);\n        dispatch(clearTimeScoreArray([]));\n        dispatch(clearUserAnswereArray([]));\n        dispatch(clearScore(0));\n    }\n\n    let displayFinalScore\n    if(finalScore === 0){\n        displayFinalScore = \"00000\"\n    }else if(finalScore < 100){\n        displayFinalScore = \"000\" + finalScore\n    }else if(finalScore < 1000){\n        displayFinalScore = \"00\" + finalScore\n    }else if(finalScore < 10000){\n        displayFinalScore = \"0\" + finalScore\n    }else{\n        displayFinalScore = finalScore\n    }\n    return (\n        <div className=\"score\">\n            <h3 className=\"title\">Find the <br/>Differences UI</h3>\n            <div className=\"result-data\">\n                <span className=\"result-score\">{displayFinalScore}</span>\n                <div className=\"vertical-bar\"></div>\n                <span className=\"result-time\">{playerTime}</span>\n            </div>\n            {/* <p className=\"description\">You have won <span>70%</span> of challengers</p> */}\n            <p className=\"description\">Rank:<span style={{backgroundColor:rankStyleObject.rankColor}}>{rankStyleObject.rank}</span> </p>\n            {/* <p className=\"description\">Rank:<span style={{backgroundColor:\"#C0C0C0\"}}>Silver</span> </p>\n            <p className=\"description\">Rank:<span style={{backgroundColor:\"#FFD700\"}}>Brozne</span> </p> */}\n            <div className=\"social-media\">\n                <FacebookShareButton resetButtonStyle={false} url=\"https://s490607.github.io/Find-the-Differences-UI/\" quote={\"Find the Differences UI\"}>\n                    <img src={Facebook} alt=\"facebook\" />Facebook\n                </FacebookShareButton>\n                <TwitterShareButton resetButtonStyle={false} url=\"https://s490607.github.io/Find-the-Differences-UI/\" quote={\"Find the Differences UI\"}>\n                    <img src={Twitter} alt=\"twitter\" />Twitter\n                </TwitterShareButton>\n            </div>\n            <div className=\"chart\"></div>\n            <button onClick={handleClickPlayAgain}>Play Again</button>\n        </div>\n    )\n}\n\nexport default Score\n","const addScore = value => ({ type: 'addScore', payload: value });\nconst clearScore = value => ({ type: 'clearScore', payload: value });\nconst addTimeScoreArray = value => ({ type: 'addTimeScoreArray', payload: value });\nconst clearTimeScoreArray = value => ({ type: 'clearTimeScoreArray', payload: value });\nconst addUserAnswereArray = value => ({ type: 'addUserAnswereArray', payload: value });\nconst clearUserAnswereArray = value => ({ type: 'clearUserAnswereArray', payload: value });\n\n\nexport { addScore,clearScore,addTimeScoreArray,clearTimeScoreArray,addUserAnswereArray,clearUserAnswereArray }","export default __webpack_public_path__ + \"static/media/GitHub.b210ea09.svg\";","import React,{useState} from 'react'\nimport Input from './Input'\nimport Score from './Score'\nimport GitHub from '../../../../icons/GitHub.svg';\n\nconst Result = ({setIsFormalFinished}) => {\n    const [isInpitFinished, setIsInpitFinished] = useState(false)\n    return (\n        <div className=\"result\">\n            {isInpitFinished ? <Score setIsFormalFinished={setIsFormalFinished}/> :  <Input setIsInpitFinished={setIsInpitFinished}/>}\n            {/* <Input setIsInpitFinished={setIsInpitFinished}/> */}\n            <a href=\"https://github.com/s490607/Find-the-Differences-UI\" target=\"_blank\" rel=\"noreferrer noopener\">Created by Rambo Lo<img src={GitHub} alt=\"GitHub\" /></a>\n        </div>\n    )\n}\n\nexport default Result\n","import React,{useEffect} from 'react'\nimport {useSelector,useDispatch} from 'react-redux'\nimport {addScore} from '../../../../actions/action'\n\nconst Header = ({\n    answer,\n    userAnswer,\n}) => {\n    const dispatch = useDispatch()\n\n    let finalScore = useSelector(state=>state.score);\n    let timeScoreArray = useSelector(state=>state.timeScoreArray);\n    let displayFinalScore\n    if(finalScore === 0){\n        displayFinalScore = \"00000\"\n    }else if(finalScore < 100){\n        displayFinalScore = \"000\" + finalScore\n    }else if(finalScore < 1000){\n        displayFinalScore = \"00\" + finalScore\n    }else if(finalScore < 10000){\n        displayFinalScore = \"0\" + finalScore\n    }else{\n        displayFinalScore = finalScore\n    }\n\n    useEffect(() => {\n        let score = 0\n        let timeScore = timeScoreArray[timeScoreArray.length - 1]\n        if(answer === userAnswer){\n            if(timeScore){\n                score = calculateScore(Math.floor(timeScore))\n            }\n        }\n        dispatch(addScore(score));//update score\n    }, [timeScoreArray])\n\n    const calculateScore = (time)=> {\n        if(time <= 2){\n            return 640\n        }else if(time <= 4){\n            return 320\n        }else if(time <= 8){\n            return 160\n        }else if(time <= 16){\n            return 80\n        }else if(time <= 32){\n            return 40\n        }else if(time <= 64){\n            return 20\n        }else if(time > 64){\n            return 10\n        }\n    }\n\n    return (\n        <div className=\"header\">\n            <h3 className=\"title\">\n                Find the <br/>Differences UI\n            </h3>\n            <h3 className=\"score\">\n                {displayFinalScore}\n            </h3>\n        </div>\n    )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/Correct.7103ff20.svg\";","import React,{useState} from 'react'\nimport Correct from '../../../../../icons/Correct.svg'\n\nconst Content = ({\n    data,\n    index,\n    setBeginIndex,\n    setIsBeginFinished\n}) => {\n    const [buttonArea, setButtonArea] = useState(false);\n    const [pictureOverlapping, setPictureOverlapping] = useState(false);\n    const [firstCorrectStyle, setFirstCorrectStyle] = useState({});\n    const [secondCorrectStyle, setSecondCorrectStyle] = useState({});\n    const [userAnswer, setUserAnswer] = useState(0);\n    const [descriptionIcon, setDescriptionIcon] = useState({})\n\n    let answer = data[index].answer\n\n    const handleClickFirstPicture = () => {\n        let firstStyle\n        let secondStyle\n        let beginIndexEvent = 0\n        let userAnswerClick = 1\n        let icon\n        if(answer === 1){\n            firstStyle = {zIndex:\"1\"}\n            icon = Correct\n        }\n        if(index === 0){\n            beginIndexEvent = 1;\n        }\n        setFirstCorrectStyle(firstStyle);\n        setSecondCorrectStyle(secondStyle);\n        setButtonArea(true);\n        setPictureOverlapping(true);\n        setBeginIndex(pre=> pre + beginIndexEvent);\n        setUserAnswer(userAnswerClick);\n        setDescriptionIcon(icon);\n    }\n\n    const handleClickNext = () => {\n        let beginFinished = false\n        if(data.length - 1 === index){\n            beginFinished = true\n        }\n        setIsBeginFinished(beginFinished)\n    }\n    const handleClickCompare = (event) => {\n        let firstStyle\n        let secondStyle\n        let hidden = {zIndex:\"1\",visibility: \"hidden\"}\n        let visible = {zIndex:\"1\",visibility: \"visible\"}\n        let beginIndexEvent = 0\n        if(event.type === \"mousedown\"){\n            if(answer === 1){\n                firstStyle = hidden\n            }else if(answer === 2){\n                secondStyle = hidden\n            }\n        }else if(event.type === \"mouseup\"){\n            if(answer === 1){\n                firstStyle = visible\n            }else if(answer === 2){\n                secondStyle = visible\n            }\n            if(index === 1){\n                beginIndexEvent = 1;\n            }\n        }\n\n        setFirstCorrectStyle(firstStyle);\n        setSecondCorrectStyle(secondStyle);\n        setBeginIndex(pre=> pre + beginIndexEvent);\n    }\n\n    return (\n        <div className=\"content\">\n            <div className=\"pictures\">\n                <div className={pictureOverlapping ? \"img-box first-box\" : \"img-box\"}  style={firstCorrectStyle}>\n                    <img onClick={handleClickFirstPicture} src=\"https://i.imgur.com/P1gABES.png\" alt=\"pictures\" className={data[index].picture ? \"green-box\" : null} />\n                </div>\n                <div className={pictureOverlapping ? \"img-box second-box\" : \"img-box\"} style={secondCorrectStyle}>\n                    <img  src=\"https://i.imgur.com/ew5wvoX.png\" alt=\"pictures\" />\n                </div>                \n                \n            </div>\n            <div className=\"description\">\n                 <div className=\"test-description\">\n                    {userAnswer !== 0 ? <img src={descriptionIcon} alt={descriptionIcon} /> : null }\n                    <p>{data[index].testDescription}</p>\n                 </div>\n                 <div className=\"begin-description\">\n                     <p>{data[index].beginDescription}</p>\n                 </div>\n            </div>\n            {buttonArea ? \n            <div className=\"button-area\">\n                <button onMouseDown={handleClickCompare} onMouseUp={handleClickCompare} onTouchStart={handleClickCompare} onTouchEnd={handleClickCompare} className={data[index].compareButton ? \"green-box\" : null}>Compare</button>\n                <button onClick={handleClickNext} className={data[index].nextButton ? \"green-box\" : null}>Next</button>\n            </div> : null}\n        </div>\n    )\n}\n\nexport default Content\n\n\n","import React from 'react'\n\nconst Footer = ({\n    arrayIndex,\n    arrayLength,\n    loadingName\n}) => {\n    let step = arrayIndex + 1\n    let loadingWidth = ((step / arrayLength)*100)+ \"%\"\n    return (\n        <div className=\"footer\">\n            <div className=\"loading-bar\">\n                <div className=\"loading\" style={{width:loadingWidth}}></div>\n                <span>{loadingName} {step}/{arrayLength}</span>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Footer\n","import React,{useState} from 'react'\nimport Header from '../Header'\nimport BeginContent from './BeginContent'\nimport Footer from '../Footer'\nimport BeginData from '../../../../../mode/begin.json'\n\nconst Begin = ({setIsBeginFinished}) => {\n    const [beginIndex, setBeginIndex] = useState(0)\n    const beginDataArrayLength = BeginData.length\n    const loadingName = \"Teaching\"\n    return (\n        <>\n            <Header/>\n            <BeginContent \n                data={BeginData}\n                index={beginIndex}\n                setBeginIndex={setBeginIndex}\n                setIsBeginFinished={setIsBeginFinished}\n            />\n            <Footer arrayIndex={beginIndex} arrayLength={beginDataArrayLength} loadingName={loadingName}/>\n        </>\n    )\n}\n\nexport default Begin\n\n","export default __webpack_public_path__ + \"static/media/Wrong.a9eb797c.svg\";","import React,{useState} from 'react'\nimport Correct from '../../../../../icons/Correct.svg'\nimport Wrong from '../../../../../icons/Wrong.svg'\n\nconst Content = ({\n    data,\n    testIndex,\n    setTestIndex,\n    levelIndex,\n    setLevelIndex,\n    setCurrentTime,\n    startTime,\n    userAnswer,\n    setUserAnswer,\n    setIsFormalFinished\n}) => {\n    const [buttonArea, setButtonArea] = useState(false);\n    const [pictureOverlapping, setPictureOverlapping] = useState(true);\n    const [isPictureClicked, setIsPictureClicked] = useState(false);\n    const [firstCorrectStyle, setFirstCorrectStyle] = useState({});\n    const [secondCorrectStyle, setSecondCorrectStyle] = useState({});\n\n    const [descriptionIcon, setDescriptionIcon] = useState({})\n    const [descriptionText, setDescriptionText] = useState(\"Please choose the correct interface\")\n\n    let answer = data[testIndex].answer\n    let testDescription = data[testIndex].testDescription\n    let introDescription = \"Please choose the correct interface\"\n\n    const selectedPitcure = (userClick) => {\n        let firstStyle\n        let secondStyle\n        let userAnswerClick = userClick\n        let icon\n\n        answer === userAnswerClick ? icon = Correct : icon = Wrong;\n        answer === 1 ? firstStyle = {zIndex:\"1\"} : secondStyle = {zIndex:\"1\"};\n\n\n        setCurrentTime(new Date().getTime());\n\n        setIsPictureClicked(true)\n        setFirstCorrectStyle(firstStyle);\n        setSecondCorrectStyle(secondStyle);\n        setButtonArea(true);\n        setPictureOverlapping(false);\n        setUserAnswer(userAnswerClick);\n        setDescriptionIcon(icon);\n        setDescriptionText(testDescription);\n    }\n    const handleClickFirstPicture = () => {\n        if(isPictureClicked){\n            return\n        }\n        selectedPitcure(1);\n    }\n    const handleClickSecondPicture = () => {\n        if(isPictureClicked){\n            return\n        }\n        selectedPitcure(2);\n    }\n    const handleClickNext = () => {\n        let formalIndexEvent = 0;\n        let plusLevelIndex = 0;\n        let resetTestIndex = 0;\n        let formalFinished = false\n\n        startTime.current = new Date().getTime()\n\n        //### 1.code review : Changing array\n        if(testIndex < data.length - 1){\n            formalIndexEvent = 1\n        }\n        if(testIndex === data.length - 1){\n            //is last level ?\n            plusLevelIndex = 1\n            resetTestIndex = testIndex\n            if(levelIndex === 2){\n                plusLevelIndex = 0\n                formalFinished = true\n            }\n        }\n        // ###\n        setIsPictureClicked(false)\n        setTestIndex(pre => pre + formalIndexEvent - resetTestIndex);\n        setLevelIndex(pre => pre + plusLevelIndex);\n        setButtonArea(false);\n        setPictureOverlapping(true);\n        setDescriptionText(introDescription);\n        setUserAnswer(0);\n        setIsFormalFinished(formalFinished);\n    }\n    const handleClickCompare = (event) => {\n        let firstStyle\n        let secondStyle\n        let hidden = {zIndex:\"1\",visibility: \"hidden\"}\n        let visible = {zIndex:\"1\",visibility: \"visible\"}\n        if(event.type === \"mousedown\" || event.type === \"touchstart\"){\n            if(answer === 1){\n                firstStyle = hidden\n            }else if(answer === 2){\n                secondStyle = hidden\n            }\n        }else if(event.type === \"mouseup\" || event.type === \"touchend\"){\n            if(answer === 1){\n                firstStyle = visible\n            }else if(answer === 2){\n                secondStyle = visible\n            }\n        }\n\n        setFirstCorrectStyle(firstStyle);\n        setSecondCorrectStyle(secondStyle);\n    }\n\n    return (\n        <div className=\"content\">\n            <div className=\"pictures\">\n                <div className={pictureOverlapping ? \"img-box\" : \"img-box first-box\"}  style={firstCorrectStyle}>\n                    <img onClick={handleClickFirstPicture} src={data[testIndex].firstPicture} alt=\"pictures\" />\n                </div>\n                <div className={pictureOverlapping ? \"img-box\" : \"img-box second-box\"} style={secondCorrectStyle}>\n                    <img onClick={handleClickSecondPicture} src={data[testIndex].secondPicture} alt=\"pictures\" />\n                </div>                \n                \n            </div>\n            <div className=\"description\">\n                 <div className=\"test-description\">\n                    {userAnswer !== 0 ? <img src={descriptionIcon} alt={descriptionIcon} /> : null }\n                    <p>{descriptionText}</p>\n                 </div>\n            </div>\n            {buttonArea ? \n            <div className=\"button-area\">\n                <button onMouseDown={handleClickCompare} onMouseUp={handleClickCompare} onTouchStart={handleClickCompare} onTouchEnd={handleClickCompare}>Compare</button>\n                <button onClick={handleClickNext}>Next</button>\n            </div> : null}\n        </div>\n    )\n}\n\nexport default Content\n\n\n","import React,{useState,useEffect,useRef} from 'react'\nimport Header from '../Header'\nimport FormalContent from './FormalContent'\nimport Footer from '../Footer'\nimport {useDispatch} from 'react-redux'\nimport {addTimeScoreArray,addUserAnswereArray} from '../../../../../actions/action'\nimport data from '../../../../../mode/formal.json'\n\nconst FormalTest = ({setIsFormalFinished}) => {\n    const [testIndex, setTestIndex] = useState(0);\n    const [levelIndex, setLevelIndex] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [userAnswer, setUserAnswer] = useState(0);\n    const dispatch = useDispatch()\n    const startTime = useRef(new Date().getTime())\n\n    // let timeScoreArray = useSelector(state=>state.timeScoreArray);\n    \n    \n    \n    let easy = data.easy;\n    let medium = data.medium;\n    let hard = data.hard;\n    let level = [easy,medium,hard];\n    let formalDataArrayLength = level[levelIndex].length;\n    let loadingName = level[levelIndex][testIndex].level;\n    \n    useEffect(() => {\n        // let costTime = 0\n\n        //跳過第一次載入\n        if(currentTime !== 0){\n            let costTime = (currentTime - startTime.current)/1000;\n            dispatch(addTimeScoreArray(costTime))\n        }\n    }, [currentTime,dispatch])\n\n    useEffect(() => {\n        if(userAnswer !== 0){\n            dispatch(addUserAnswereArray(userAnswer))\n        }\n    }, [userAnswer,dispatch])\n\n    return (\n        <>  \n            <Header \n                answer={level[levelIndex][testIndex].answer}\n                userAnswer={userAnswer}\n                currentTime={currentTime}\n                startTime={startTime.current}/>\n            <FormalContent \n                data={level[levelIndex]}\n                testIndex={testIndex}\n                setTestIndex={setTestIndex}\n                setLevelIndex={setLevelIndex}\n                levelIndex={levelIndex}\n                setCurrentTime={setCurrentTime}\n                startTime={startTime}\n                userAnswer={userAnswer}\n                setUserAnswer={setUserAnswer}\n                setIsFormalFinished={setIsFormalFinished}/>\n            <Footer \n                arrayIndex={testIndex}\n                arrayLength={formalDataArrayLength}\n                loadingName={loadingName}/>\n        </>\n    )\n}\n\nexport default FormalTest\n","import React,{useState} from 'react'\n\nimport BeginTest from './Begin/BeginTest'\nimport FormalTest from './Formal/FormalTest'\n\nconst Test = ({setIsFormalFinished}) => {\n    const [isBeginFinished, setIsBeginFinished] = useState(false)\n    \n    return (\n        <>\n            {isBeginFinished ? <FormalTest setIsFormalFinished={setIsFormalFinished}/> : <BeginTest setIsBeginFinished={setIsBeginFinished}/>}\n        </>\n    )\n}\n\nexport default Test\n","import React,{useState,useEffect} from 'react';\nimport './index.scss';\n\nimport Result from './components/result/index';\nimport Test from './components/test/index';\n\nimport ReactGA from 'react-ga';\nimport KEY from '../../config.json'\n\nconst Home = () => {\n    useEffect(() => {\n        ReactGA.initialize(KEY.TRACKING_ID);\n        ReactGA.pageview(window.location.pathname);\n    }, [])\n    const [isFormalFinished, setIsFormalFinished] = useState(false);\n    useEffect(() => {\n        console.log(\"Hi!🙋‍♂️\\n\\nI hope you can enjoy this game.\\nAlthough you can find the answer from the DevTools.\\nBut that ultimately lost the fun of the game.\\nHave a good time!\");\n    }, [])\n    \n    return (\n        <div className=\"container-outside\">\n            <div className=\"container-inside\" style={{height:window.innerHeight}}>\n                {isFormalFinished ? <Result setIsFormalFinished={setIsFormalFinished}/> : <Test setIsFormalFinished={setIsFormalFinished}/>}\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","const score = (state=0,action) => {\n    switch(action.type){\n        case 'addScore':\n            return state  + action.payload;\n        case 'clearScore':\n            return 0;\n        default:\n            return state;\n    }\n}\nexport default score","// const initialState = [];\nconst timeScoreArray = (state = [],action) => {\n    switch(action.type){\n        case 'addTimeScoreArray':\n            return [...state, action.payload];\n        case 'clearTimeScoreArray':\n            return [];\n        default:\n            return state;\n    }\n}\nexport default timeScoreArray","// const initialState = [];\nconst userAnswereArray = (state = [],action) => {\n    switch(action.type){\n        case 'addUserAnswereArray':\n            return [...state, action.payload];\n        case 'clearUserAnswereArray':\n            return [];\n        default:\n            return state;\n    }\n}\nexport default userAnswereArray","import {createStore,combineReducers} from 'redux'\nimport score from '../reducer/scoreReducer'\nimport timeScoreArray from '../reducer/timeScoreArrayReducer'\nimport userAnswereArray from '../reducer/userAnswerArray'\nconst store=createStore(combineReducers({score,timeScoreArray,userAnswereArray}))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global/normalize.scss'\nimport Home from './pages/Home/index'\nimport store from './store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Home />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}